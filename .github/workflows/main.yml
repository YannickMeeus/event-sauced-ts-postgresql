name: Verify (Build & Test), Package and Deploy if applicable

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # from https://github.com/actions/example-services/blob/master/.github/workflows/postgres-service.yml
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_USER: 'integration_testing'
          POSTGRES_PASSWORD: 'admin'
          POSTGRES_DB: 'postgres'
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2-beta
        with:
          node-version: '12'

      - name: Print GitHub Context # Debug step
        if: true == false
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

      - uses: jgierer12/npm-auth-gpr@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install all dependencies
        run: npm ci

      - name: Run linter
        run: npm start prerequisites.lint

      - name: Run All Tests (There's a bunch of integration tests in here)
        run: npm test

      - name: Remove output folder if one exists
        run: npm start prerequisites.build

      - name: Transpile and package up the library
        run: npm start build

      - name: Publish to NPM
        if: endsWith(github.ref, 'master')
        run: npm start publish.ciDryrun
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.GITHUB_TOKEN }}
